# name: Django CI/CD Pipeline

# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     branches:
#       - main

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v4

#       - name: Set up Python
#         uses: actions/setup-python@v4
#         with:
#           python-version: '3.9'

#       - name: Install dependencies
#         run: |
#           python -m pip install --upgrade pip
#           pip install -r requirements.txt

#       - name: Run tests
#         run: |
#           python manage.py test

#   deploy:
#     needs: build
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v4

#       - name: Start Minikube
#         run: |
#           curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
#           chmod +x minikube
#           sudo mv minikube /usr/local/bin/
#           minikube start --driver=docker

#       - name: Build Docker Image in Minikube
#         run: |
#           eval $(minikube docker-env)
#           docker build -t django-ecommerce:latest .
#           kubectl apply -f deployment.yaml
#           kubectl apply -f service.yaml

#       - name: Verify Deployment
#         run: |
#           kubectl get pods
#           kubectl get services

name: Django CI/CD Pipeline

on: 
  push:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Run Tests
        run: |
          python manage.py test

  deploy:
    runs-on: ubuntu-latest
    needs: test  # Ensures deployment happens only if tests pass
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Start Minikube
        run: minikube start

      - name: Build Docker Image in Minikube
        run: |
          eval $(minikube docker-env)
          docker build -t django-app .

      - name: Deploy to Minikube
        run: |
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml
